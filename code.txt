#define IN1 8 // GPIO 8
#define IN2 9 // GPIO 9
#define IN3 10 // GPIO 10
#define IN4 11 // GPIO 11

const int lengthSeq = 8; // Długość sekwencji sterującej 4 krokami
int Step = 0;            // Kolejny krok przemiatania macierzy sekwencji
unsigned long aktualnyCzas = 0;
unsigned long zapamietanyCzas = 0;
unsigned long roznicaCzasu = 0;
int pin = 0;
int counter = 0;


int stepsMatrix[lengthSeq][4] =
{
  {0, 0, 0, 1},  // 1
  {0, 0, 1, 1},  // 2
  {0, 0, 1, 0},  // 4
  {0, 1, 1, 0},  // 8
  {0, 1, 0, 0},  // 1
  {1, 1, 0, 0},  // 2
  {1, 0, 0, 0},  // 4
  {1, 0, 0, 1},  // 8
};

void fun(int Mode, int speed,int Side,int howmuch,int spin)
{
   aktualnyCzas = millis();
  roznicaCzasu = aktualnyCzas - zapamietanyCzas;
	( Mode ==2) ? spin = spin*2 : spin = spin;
	howmuch = howmuch + (spin * 32);


  if(Mode == 0)
  {
      if (roznicaCzasu >= speed) 
    {
          zapamietanyCzas = aktualnyCzas;
     
       digitalWrite(IN1, stepsMatrix[Step][pin]);
      pin = change(Side,howmuch);
       digitalWrite(IN2, stepsMatrix[Step][pin]);
      pin = change(Side,howmuch);
       digitalWrite(IN3, stepsMatrix[Step][pin]);
      pin = change(Side,howmuch);
       digitalWrite(IN4, stepsMatrix[Step][pin]); 
 		pin = change(Side,howmuch);
      Step += 2;
          if(Step > 7)
      {
          Step = 0;
      }
    }

  }
  if(Mode == 1)
  {
  
    if(Step ==0)
    {
      Step = 1;
    }
      if (roznicaCzasu >= speed) 
    {
        zapamietanyCzas = aktualnyCzas;
            digitalWrite(IN1, stepsMatrix[Step][pin]);
      pin = change(Side,howmuch);
       digitalWrite(IN2, stepsMatrix[Step][pin]);
      pin = change(Side,howmuch);
       digitalWrite(IN3, stepsMatrix[Step][pin]);
      pin = change(Side,howmuch);
       digitalWrite(IN4, stepsMatrix[Step][pin]); 
 		pin = change(Side,howmuch);
 
      Step += 2;
          if(Step > 7)
      {
          Step = 1;
      }
    }

  }
  if(Mode == 2)
  {
      if (roznicaCzasu >= speed) 
    {
          zapamietanyCzas = aktualnyCzas;
 
     zapamietanyCzas = aktualnyCzas;
           digitalWrite(IN1, stepsMatrix[Step][pin]);
      pin = change(Side,howmuch);
       digitalWrite(IN2, stepsMatrix[Step][pin]);
      pin = change(Side,howmuch);
       digitalWrite(IN3, stepsMatrix[Step][pin]);
      pin = change(Side,howmuch);
       digitalWrite(IN4, stepsMatrix[Step][pin]); 
 		pin = change(Side,howmuch);
 
      Step++;
          if(Step > 7)
      {
          Step = 0;
      }
    }

  }
}

int change(int x,int xd)
{
int abc =0;
  if(x==0)
  {
  
   if(pin>=3 )
    {
      abc =0;
    }
    else
    {
      abc = pin+1;
    } 
  }
else
  { 
    if(pin<=0 || pin == 3)
    {
      abc =3;
    }
    else
    {
      abc = pin-1;
    } 
  }

counter = count(xd);
  return abc;
}

int count(int x)
{
int y = counter;
	if(y == x*4)
	{
	  delay(1000);
	y = 0;
	}
	else
	{
		y = counter +1;
	}
	return y;
}
void setup()
{
  pinMode(IN1, OUTPUT);
  pinMode(IN2, OUTPUT);
  pinMode(IN3, OUTPUT);
  pinMode(IN4, OUTPUT);

 digitalWrite(IN1, 0);
digitalWrite(IN2, 0);
digitalWrite(IN3, 0);
digitalWrite(IN4,0);
pin = 0;
counter =0;
}

void loop()
{
  fun(0,10,1,0,1);
}
    
